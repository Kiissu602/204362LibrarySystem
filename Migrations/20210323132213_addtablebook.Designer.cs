// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _204362LibrarySystem.Models;

namespace _204362LibrarySystem.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210323132213_addtablebook")]
    partial class addtablebook
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_204362LibrarySystem.Models.Author", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("char(13)");

                    b.Property<int>("WriterID")
                        .HasColumnType("int");

                    b.HasKey("ISBN", "WriterID");

                    b.HasIndex("WriterID");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Book", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("char(13)");

                    b.Property<string>("BookImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CatagoryID")
                        .HasColumnType("int");

                    b.Property<int>("Edition")
                        .HasColumnType("int");

                    b.Property<int>("Pagination")
                        .HasColumnType("int");

                    b.Property<string>("Plot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("PublicationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublisherID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ISBN");

                    b.HasIndex("CatagoryID");

                    b.HasIndex("PublisherID");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Catagory", b =>
                {
                    b.Property<int>("CatagoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatagoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CatagoryID");

                    b.ToTable("Catagory");
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacultyID")
                        .HasColumnType("int");

                    b.HasKey("DepartmentID");

                    b.HasIndex("FacultyID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Faculty", b =>
                {
                    b.Property<int>("FacultyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FacultyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultyID");

                    b.ToTable("Faculty");
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Job", b =>
                {
                    b.Property<int>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("JobID");

                    b.HasAlternateKey("JobName");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Member", b =>
                {
                    b.Property<string>("MemberID")
                        .HasColumnType("char(9)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(896)");

                    b.Property<int>("FacultyID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nchar(10)");

                    b.HasKey("MemberID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FacultyID");

                    b.HasIndex("JobID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherID");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Writer", b =>
                {
                    b.Property<int>("WriterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WriterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WriterID");

                    b.ToTable("Writer");
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Author", b =>
                {
                    b.HasOne("_204362LibrarySystem.Models.Book", "Book")
                        .WithMany("Authorlist")
                        .HasForeignKey("ISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_204362LibrarySystem.Models.Writer", "Writer")
                        .WithMany("Authorlist")
                        .HasForeignKey("WriterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Book", b =>
                {
                    b.HasOne("_204362LibrarySystem.Models.Catagory", "Catagory")
                        .WithMany("Booklist")
                        .HasForeignKey("CatagoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_204362LibrarySystem.Models.Publisher", "Publisher")
                        .WithMany("Booklist")
                        .HasForeignKey("PublisherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Department", b =>
                {
                    b.HasOne("_204362LibrarySystem.Models.Faculty", "Faculty")
                        .WithMany("Departmentlist")
                        .HasForeignKey("FacultyID");
                });

            modelBuilder.Entity("_204362LibrarySystem.Models.Member", b =>
                {
                    b.HasOne("_204362LibrarySystem.Models.Department", "Department")
                        .WithMany("MemberList")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_204362LibrarySystem.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_204362LibrarySystem.Models.Job", "Job")
                        .WithMany("MemberList")
                        .HasForeignKey("JobID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
